//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbVinhosEFA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VinhosEFAEntities : DbContext
    {
        public VinhosEFAEntities()
            : base("name=VinhosEFAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Casta> Castas { get; set; }
        public virtual DbSet<Enologo> Enologoes { get; set; }
        public virtual DbSet<Produtor> Produtors { get; set; }
        public virtual DbSet<Regiao> Regiaos { get; set; }
        public virtual DbSet<TipoVinho> TipoVinhoes { get; set; }
        public virtual DbSet<Utilizador> Utilizadors { get; set; }
        public virtual DbSet<Vinho> Vinhoes { get; set; }
        public virtual DbSet<VinhoCasta> VinhoCastas { get; set; }
        public virtual DbSet<VinhoEnologo> VinhoEnologoes { get; set; }
        public virtual DbSet<VinhoProva> VinhoProvas { get; set; }
    
        public virtual int usp_AssociarCastas(Nullable<int> vinho, string castas)
        {
            var vinhoParameter = vinho.HasValue ?
                new ObjectParameter("vinho", vinho) :
                new ObjectParameter("vinho", typeof(int));
    
            var castasParameter = castas != null ?
                new ObjectParameter("castas", castas) :
                new ObjectParameter("castas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssociarCastas", vinhoParameter, castasParameter);
        }
    
        public virtual int usp_DissociarCastas(Nullable<int> vinho, string castas)
        {
            var vinhoParameter = vinho.HasValue ?
                new ObjectParameter("vinho", vinho) :
                new ObjectParameter("vinho", typeof(int));
    
            var castasParameter = castas != null ?
                new ObjectParameter("castas", castas) :
                new ObjectParameter("castas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DissociarCastas", vinhoParameter, castasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetIDUtilizador(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetIDUtilizador", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_VinhoInsert(string nome, string foto, Nullable<int> regiao, Nullable<int> produtor, Nullable<int> tipo, Nullable<decimal> volume, Nullable<decimal> teorAlcoolico, Nullable<int> ano, Nullable<int> utilizador)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var regiaoParameter = regiao.HasValue ?
                new ObjectParameter("regiao", regiao) :
                new ObjectParameter("regiao", typeof(int));
    
            var produtorParameter = produtor.HasValue ?
                new ObjectParameter("produtor", produtor) :
                new ObjectParameter("produtor", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var volumeParameter = volume.HasValue ?
                new ObjectParameter("volume", volume) :
                new ObjectParameter("volume", typeof(decimal));
    
            var teorAlcoolicoParameter = teorAlcoolico.HasValue ?
                new ObjectParameter("teorAlcoolico", teorAlcoolico) :
                new ObjectParameter("teorAlcoolico", typeof(decimal));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("ano", ano) :
                new ObjectParameter("ano", typeof(int));
    
            var utilizadorParameter = utilizador.HasValue ?
                new ObjectParameter("utilizador", utilizador) :
                new ObjectParameter("utilizador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_VinhoInsert", nomeParameter, fotoParameter, regiaoParameter, produtorParameter, tipoParameter, volumeParameter, teorAlcoolicoParameter, anoParameter, utilizadorParameter);
        }
    
        public virtual int usp_AssociarEnologo(Nullable<int> vinho, string enologo)
        {
            var vinhoParameter = vinho.HasValue ?
                new ObjectParameter("vinho", vinho) :
                new ObjectParameter("vinho", typeof(int));
    
            var enologoParameter = enologo != null ?
                new ObjectParameter("enologo", enologo) :
                new ObjectParameter("enologo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssociarEnologo", vinhoParameter, enologoParameter);
        }
    
        public virtual int usp_DissociarEnologo(Nullable<int> vinho, string enologo)
        {
            var vinhoParameter = vinho.HasValue ?
                new ObjectParameter("vinho", vinho) :
                new ObjectParameter("vinho", typeof(int));
    
            var enologoParameter = enologo != null ?
                new ObjectParameter("enologo", enologo) :
                new ObjectParameter("enologo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DissociarEnologo", vinhoParameter, enologoParameter);
        }
    
        public virtual ObjectResult<usp_GetListaVinhos_Result> usp_GetListaVinhos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetListaVinhos_Result>("usp_GetListaVinhos");
        }
    
        public virtual ObjectResult<usp_GetVinhoById_Result> usp_GetVinhoById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVinhoById_Result>("usp_GetVinhoById", idParameter);
        }
    
        public virtual ObjectResult<usp_GetVinhoByUser_Result> usp_GetVinhoByUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVinhoByUser_Result>("usp_GetVinhoByUser", idParameter);
        }
    }
}
